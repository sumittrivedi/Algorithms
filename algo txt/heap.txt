#include <stdio.h>
#include <stdlib.h>
void heapify(int[],int);
void reheapifydown(int [],int,int);
void heap_sort(int[],int);
int main()
{
     int a[50],n,i;
     printf("Enter number of elements\n");
     scanf("%d",&n);
     printf("Enter %d integers\n", n);
     for (i=1;i<=n;i++)
     scanf("%d",&a[i]);
     heap_sort(a,n);
     printf("Sorted list in ascending order:\n");
     for (i = 1 ; i <= n ; i++ )
     printf("%d\n", a[i]);
     return 0;
}
void heapify(int heap[],int n)
{
    int i,index;
    index=n/2;
    for(i=index;i>=1;i--)
    {
        reheapifydown(heap,i,n);
    }
}
void reheapifydown(int heap[],int start,int finish)
{
    int max,index;
    int temp;
    int lchild = 2*start;
    int rchild = lchild+1;
    if (lchild<=finish)
    {
        max=heap[lchild];
        index=lchild;
        if (rchild<=finish)
        {
            if (heap[rchild]>max)
            {
                max=heap[rchild];
                index=rchild;
            }
        }

        if (heap[start]<heap[index])
        {
            temp=heap[start];
            heap[start]=heap[index];
            heap[index]=temp;
            reheapifydown(heap,index,finish);
        }
    }
}
void heap_sort(int heap[],int n)
{
    int temp,i;
    //int heap[50];
    // heapify(int heap[],int n)
    heapify(heap,n);
    for(i=n;i>=1;i--)
    {
        temp=heap[1];
        heap[1]=heap[i];
        heap[i]=temp;
        reheapifydown(heap,1,i-1);
    }
}
